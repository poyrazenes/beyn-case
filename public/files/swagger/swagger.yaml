swagger: "2.0"
info:
  description: "This is the first version mobile api documentation. You can find out more about Swagger at [http://swagger.io](http://swagger.io)."
  version: "0.0.1"
  title: "Beyn Case"
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: "apiteam@swagger.io"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
basePath: "/api/mobile/v1"
tags:
  - name: "auth"
    description: "Authentication operations"
  - name: "user"
    description: "User operations"
  - name: "service"
    description: "Service operations"
  - name: "car"
    description: "Car operations"
  - name: "order"
    description: "Order operations"
schemes:
  - "http"
paths:
  /auth/login:
    post:
      tags:
        - "auth"
      summary: "Logs users into the system"
      description: ""
      operationId: "login"
      consumes:
        - "application/x-www-form-urlencoded"
      produces:
        - "application/json"
      parameters:
        - name: "email"
          in: "formData"
          description: "User email"
          required: true
          type: "string"
        - name: "password"
          in: "formData"
          description: "User password"
          required: true
          type: "string"
      responses:
        "200":
          description: "successful operation"
          schema:
            "$ref": "#/definitions/ApiResponse"
        "401":
          description: "Failed operation"
          schema:
            "$ref": "#/definitions/ApiResponse"
  /user/profile:
    get:
      tags:
        - "user"
      summary: "Get User Profile Details"
      description: ""
      operationId: "user-profile"
      produces:
        - "application/json"
      parameters: []
      security:
        - JWT: []
      responses:
        "200":
          description: "successful operation"
          schema:
            "$ref": "#/definitions/ApiResponse"
        "429":
          description: "Too Many Request"
          schema:
            "$ref": "#/definitions/ApiResponse"
  /user/update-balance:
    post:
      tags:
        - "user"
      summary: "Update authenticated user balance"
      description: ""
      operationId: "user-update-balance"
      consumes:
        - "application/x-www-form-urlencoded"
      produces:
        - "application/json"
      parameters:
        - name: "balance"
          in: "formData"
          description: "User Balance"
          required: true
          type: "number"
      security:
        - JWT: []
      responses:
        "200":
          description: "successful operation"
          schema:
            "$ref": "#/definitions/ApiResponse"
        "429":
          description: "Too Many Request"
          schema:
            "$ref": "#/definitions/ApiResponse"
  /services:
    get:
      tags:
        - "service"
      summary: "Fetch all service list"
      description: ""
      operationId: "service-index"
      produces:
        - "application/json"
      parameters: []
      security:
        - JWT: []
      responses:
        "200":
          description: "successful operation"
          schema:
            "$ref": "#/definitions/ApiResponse"
        "429":
          description: "Too Many Request"
          schema:
            "$ref": "#/definitions/ApiResponse"
  /cars:
    get:
      tags:
        - "car"
      summary: "Fetch all cars"
      description: ""
      operationId: "service-index"
      produces:
        - "application/json"
      parameters:
        - name: "brand"
          in: "query"
          description: "Car Brand"
          required: false
          type: "string"
        - name: "model"
          in: "query"
          description: "Car Model"
          required: false
          type: "string"
        - name: "year"
          in: "query"
          description: "Year"
          required: false
          type: "string"
        - name: "page"
          in: "query"
          description: "Page"
          required: false
          type: "integer"
      security:
        - JWT: []
      responses:
        "200":
          description: "successful operation"
          schema:
            "$ref": "#/definitions/ApiResponse"
        "429":
          description: "Too Many Request"
          schema:
            "$ref": "#/definitions/ApiResponse"
  /orders:
    get:
      tags:
        - "order"
      summary: "Fetch all orders"
      description: ""
      operationId: "order-index"
      produces:
        - "application/json"
      parameters:
        - name: "car_id"
          in: "query"
          description: "Car id"
          required: false
          type: "integer"
        - name: "service_id"
          in: "query"
          description: "Service id"
          required: false
          type: "integer"
        - name: "page"
          in: "query"
          description: "Page"
          required: false
          type: "integer"
      security:
        - JWT: []
      responses:
        "200":
          description: "successful operation"
          schema:
            "$ref": "#/definitions/ApiResponse"
        "422":
          description: "Unprocessable Entity"
          schema:
            "$ref": "#/definitions/ApiResponse"
    post:
      tags:
        - "order"
      summary: "Store new order"
      description: ""
      operationId: "order-store"
      produces:
        - "application/json"
      parameters:
        - name: "car_id"
          in: "formData"
          description: "Car id"
          required: true
          type: "integer"
        - name: "service_id"
          in: "formData"
          description: "Service id"
          required: true
          type: "integer"
      security:
        - JWT: []
      responses:
        "200":
          description: "successful operation"
          schema:
            "$ref": "#/definitions/ApiResponse"
        "422":
          description: "Unprocessable Entity"
          schema:
            "$ref": "#/definitions/ApiResponse"
definitions:
  ApiResponse:
    type: "object"
    properties:
      code:
        type: "integer"
        format: "int32"
      status:
        type: "boolean"
      message:
        type: "string"
      data:
        type: "object"
      meta:
        type: "object"
externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"
securityDefinitions:
  JWT:
    type: "apiKey"
    in: "header"
    name: "Authorization"
